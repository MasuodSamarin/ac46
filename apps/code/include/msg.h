#ifndef MSG_H
#define MSG_H

#include "typedef.h"
#include "config.h"

#define NO_MSG 0xff

enum
#if 1

{
    MSG_0 = 0,
    MSG_1,
    MSG_2,
    MSG_3,
    MSG_4,
    MSG_5,
    MSG_6,
    MSG_7,
    MSG_8,
    MSG_9,
	MSG_VOL_UP,
	MSG_VOL_DOWN,
	MSG_MUTE,
	MSG_POWER_OFF,
	MSG_LOW_POWER,

	///-------work_mode---------------
	MSG_CHANGE_WORKMODE,
	MSG_NEXT_WORKMODE,
	MSG_PRE_WORKMOD,
    MSG_LAST_WORKMOD,
	MSG_STANBY_KEY,
	MSG_ADD_200,
	MSG_ADD_100,
	MSG_ADD_10,
	MSG_ADD_5,
#ifdef SUPPORT_IR_INPUT_2_3NUMS
	MSG_TWO_IR_NUMS,
	MSG_THREE_IR_NUMS,
#endif
#ifdef support_msg_light_key
	MSG_LIGHT_KEY,
#endif 
#ifdef support_led_off_key
	MSG_LED_SW_KEY,
#endif 
#ifdef SUPPORT_ONE_KEY_TO_AUX
	MSG_ONE_KEY_TO_AUX,
#endif
#ifdef SUPPORT_ONE_KEY_TO_AC3
	MSG_ONE_KEY_TO_AC3,
#endif
#ifdef SUPPORT_ONE_KEY_TO_CD
	MSG_ONE_KEY_TO_CD,
#endif
#ifdef SUPPORT_ONE_KEY_TO_DVD
	MSG_ONE_KEY_TO_DVD,
#endif

#ifdef SUPPORT_ONE_KEY_TO_RADIO
	MSG_ONE_KEY_TO_RADIO,
#endif
#ifdef SUPPORT_ONE_KEY_TO_MP3
	MSG_ONE_KEY_TO_MP3,    
#endif
#ifdef SUPPORT_ONE_KEY_TO_USB
	MSG_ONE_KEY_TO_USB,
#endif
#ifdef SUPPORT_ONE_KEY_TO_SD
	MSG_ONE_KEY_TO_SD,	  
#endif
#ifdef SUPPORT_ONE_KEY_TO_BT
	MSG_ONE_KEY_TO_BT,	  
#endif
#if 1//def SUPPORT_ONE_KEY_ENTER_START_REC
    MSG_ONE_KEY_START_REC,
#endif
#ifdef USE_KEY_TO_CONTROL_HT1628_LIGHTS_ONOFF
   MSG_HT1628_LIGHTS_ONOFF,
#endif
#ifdef EQ_MODE_CONTROL_WITH_KEY
   MSG_EQ_BAR_MODE,
#endif
#ifdef support_menu_mode   
	MSG_MENU_MODE,	  
#endif
#ifdef  SUPPORT_MAIN_VOL_KEY
	MSG_MAIN_VOL_UP,	
	MSG_MAIN_VOL_DN,
#endif	  	
#ifdef SUPPORT_MSG_FRONT_LEFT
	MSG_FRONT_LEFT_UP,
	MSG_FRONT_LEFT_DN,
#endif
#ifdef SUPPORT_MSG_FRONT_RIGHT
	MSG_FRONT_RIGHT_UP,
	MSG_FRONT_RIGHT_DN,
#endif
#ifdef Support_MSG_BASS
	MSG_BASS_UP,	
	MSG_BASS_DN,
#endif 
#ifdef Support_MSG_TREBLE
	MSG_TREBLE_UP,				  
	MSG_TREBLE_DN,	 
#endif 	
					
#ifdef Support_MSG_SWVOL
	MSG_SWVOL_UP,				   
	MSG_SWVOL_DN,  
#endif 	
#ifdef Support_MSG_MIC_ECO_VOL_KEY
	MSG_MIC_UP,
	MSG_MIC_DN,
	MSG_ECHO_UP,
	MSG_ECHO_DN,
	//MSG_ECHO_KEY,
	//MSG_OK_VOL_KEY,	 
#endif
#ifdef Support_MSG_RESET
	MSG_RESET_KEY,
#endif
#ifdef USE_KEY_SWITCH_LED_MODE
	MSG_SWITCH_LED_MODE,
#endif
#ifdef KEY_CONTROL_LED_SCREEN_COLOR_MODE
   MSG_SWITCH_LED_SCREEN_COLOR,
#endif
#ifdef KOK_DETECT_USE_KEY
   MSG_MIC_PRIORITY,
#endif
#if 1//def SUPPORT_VOICE_ONOFF
   MSG_VOICE_ONOFF,
#endif
#if 1//def SUPPORT_AUX_FM_BT_REPLAY_KEY
   MSG_COM_REC_REPLAY,
#endif
#ifdef LED_ONOFF_CONTROL_WITH_KEY
   MSG_LED_ONOFF,
#endif

#ifdef SUPPORT_STOP_REC_PP_IN_ONE_KEY
	MSG_PP_STOP_REC,
#endif

#ifdef SUPPORT_ZY_4LED_RGB
	MSG_LED_WHITE,
	MSG_LED_RGB,
	MSG_LED_RGB_SWTICH,
#endif  
#ifdef support_reset_vol				   
	MSG_RESET_VOL,
#endif
#ifdef SUPPORT_CHANGE_VOICE_EN_CH	
	MSG_CHANGE_VOICE_EN_CH,	
#endif

#ifdef SUPPORT_USE_ENCODE_AS_MODE_CHANGE	
	MSG_CHANGE_NEXT_MODE,
	MSG_CHANGE_PREV_MODE,
#endif
#ifdef  SUPPORT_ONE_KEY_AUX_REC
	MSG_ONE_KEY_AUX_REC,	
#endif

///-------main_msg，此消息前的消息发送到MAIN线程---------------
    MSG_MAIN_MAX,

	///-------music app---------------
	MSG_MUSIC_NEXT_FILE = 0x30,
    MSG_MUSIC_PREV_FILE,
    MSG_MUSIC_PP,
    MSG_MUSIC_PLAY,
    MSG_MUSIC_PAUSE,
    MSG_MUSIC_STOP,
    MSG_MUSIC_FF,
    MSG_MUSIC_FR,
    MSG_MUSIC_FFR_DONE,
    MSG_MUSIC_RPT,
    MSG_MUSIC_EQ,
    MSG_MUSIC_U_SD,
    MSG_MUSIC_DEL_FILE,
#ifdef SUPPORT_IR_PICK_SONG
	MSG_MUSIC_PICK_SONG,
#endif
 #ifdef SUPPORT_MUSIC_FOLDER_OPERATION
	MSG_FOLDER_REPEAT,
	MSG_FOLDER_PREV,
	MSG_FOLDER_NEXT,
#endif	
#ifdef SUPPORT_MUSIC_RANDOM_KEY
	MSG_MUSIC_RANDOM_PLAY,
#endif
#ifdef SUPPORT_MUSIC_INTRO_PLAY
	MSG_MUSIC_INTRO_PLAY,
#endif
#ifdef LED_SHOW_REPEAT_ALL_ONE_FOLDER_NORMAL
	MSG_MUSIC_RPT1,
#endif
#ifdef SUPPORT_REPLAY_CANCEL_FOLDER_REPEAT_AND_PLAY_NOT_REC_FILES
    MSG_MUSIC_REC_REPLAY_CANCEL,
#endif
#ifdef KEY_DIRECT_TO_EVERY_EQ
    MSG_EQ_NORMAL,
    MSG_EQ_POPULAR,
    MSG_EQ_ROCK,
    MSG_EQ_JAZZ,
    MSG_EQ_CLASSIC,
    MSG_EQ_LIVE, //COUNTRY
#endif
#if 1//def  SUPPORT_ZY_SA_VOICE
	MSG_MUSIC_VOICE_SWITCH,	
#endif
#ifdef SUPPORT_VOICE_ONOFF_VOICE	
	MSG_MUSIC_VOICE_ONOFF,	
#endif

#ifdef support_rep_one_all
	MSG_MUSIC_RPT_ONE,
	MSG_MUSIC_RPT_ALL,
#endif

#ifdef support_EQ_SINGLE_6MODE
	MSG_MUSIC_EQ1,
	MSG_MUSIC_EQ2,
	MSG_MUSIC_EQ3,
	MSG_MUSIC_EQ4,
	MSG_MUSIC_EQ5,
	MSG_MUSIC_EQ6,
#endif


    ///-------FM app---------------
    MSG_FM_SCAN_ALL_INIT = 0x4A,
    MSG_FM_INIT,
	MSG_FM_SCAN_ALL,
	MSG_FM_PREV_STATION,
	MSG_FM_NEXT_STATION,
	MSG_FM_SCAN_ALL_DOWN,
	MSG_FM_SCAN_ALL_UP,
	MSG_FM_PREV_STEP,
	MSG_FM_NEXT_STEP,
	MSG_SRC,
#ifdef SUPPORT_FM_PAUSE
	MSG_FM_PP,
#endif
#if 1//def  SUPPORT_ZY_SA_VOICE
	MSG_FM_SEARCHING,
	MSG_FM_VOICE_SWITCH,	
#endif
#ifdef SUPPORT_VOICE_ONOFF_VOICE	
	MSG_FM_VOICE_ONOFF,	
#endif
#ifdef support_fm_aux_rec_voice
	MSG_FM_REC_START,
#endif

	MSG_FM_STOP_SCAN_ALL,
	
    ///-------BT app---------------
    MSG_BT_NEXT_FILE = 0x5A,
    MSG_BT_PREV_FILE,
    MSG_BT_PP,
    MSG_BT_CALL_LAST_NO,
    MSG_BT_CALL_CONTROL,
    MSG_BT_CALL_REJECT,
    MSG_BT_ANSWER_CALL,
    MSG_BT_SHUTTER,
    MSG_BT_RESET,
    MSG_BT_STACK_STATUS_CHANGE,
	MSG_TEST_HFP,
    MSG_DISCONNECT_ALL_LINK,
    MSG_BT_CONNECT_CTL,
    MSG_BT_HID_CTRL,
    MSG_BT_HID_TAKE_PIC,
    MSG_BT_MUSIC_EQ,
	MSG_DISP_MENU,///自动刷新界面
#ifdef  SUPPORT_ZY_SA_VOICE
	MSG_BT_VOICE_SWITCH,	
#endif
#ifdef SUPPORT_VOICE_ONOFF_VOICE	
	MSG_BT_VOICE_ONOFF,	
#endif

    ///-------AUX app---------------
    MSG_AUX_INIT = 0x70,
    MSG_AUX_MUTE,
    MSG_AUX_PAUSE,
#ifdef SUPPORT_VOICE_ONOFF_VOICE	
	MSG_AUX_VOICE_ONOFF,	
#endif
#ifdef  SUPPORT_ZY_SA_VOICE
	MSG_AUX_VOICE_SWITCH,	
#endif
#ifdef ZY_5028_MP3_AUX_FM_BT	
	MSG_AUX_VOICE_PLAY,	
#endif
#ifdef support_ac3_voice	
	MSG_AC3_VOICE_PLAY,	
#endif
#ifdef support_fm_aux_rec_voice
	MSG_AUX_REC_START,
#endif

    ///-------PC app---------------
    MSG_PC_MODE_INIT = 0x7A,
    MSG_PC_CARD_READER,
    MSG_PC_SPK_MUTE,
    MSG_PC_SPK_UNMUTE,
    MSG_PC_SPK_VOL,
    MSG_PC_MUTE,
    MSG_PC_VOL_UP,
    MSG_PC_VOL_DOWN,
    MSG_PC_PP,
    MSG_PC_PLAY_NEXT,
    MSG_PC_PLAY_PREV,
    MSG_PC_UPDATA,

    ///-------RTC app---------------
#if RTC_ALM_EN
    MSG_RTC_INIT = 0x90,
    MSG_RTC_SETTING,
    MSG_ALM_SETTING,
    MSG_ALM_SW,
    MSG_ALM_ON,
    MSG_RTC_PLUS,
    MSG_RTC_MINUS,
    MSG_RTC_POWER_DOWN,
#endif

    ///-------ENCODE app---------------
    MSG_REC_INIT,
    MSG_REC_START,
    MSG_REC_STOP,
    MSG_REC_PP,
    MSG_ENCODE_ERR,
    MSG_REC_REPLAY,
    MSG_REC_EXIT,

    ///-------IDLE app--------------
    MSG_IDLE_MODE,
    MSG_IDLE_CTL,
    MSG_ENTER_IDLE_TASK,
    MSG_EXIT_IDLE_TASK,
#ifdef SUPPORT_ZY_4LED_RGB
	MSG_IDLE_LED_WHITE,
	MSG_IDLE_LED_RGB,
	MSG_IDLE_LED_RGB_SWTICH,
#endif

#ifdef  SUPPORT_ZY_SA_VOICE
	 MSG_VOICE_MUTE,   
	 MSG_VOICE_VOLUME_PLUS,   
	 MSG_VOICE_VOLUME_MINUS, 
	 MSG_MAX_VOICE,  
#ifdef  SUPPORT_NUMBER_VOICE
	 MSG_VOICE_NUMBER,  
#endif
	 
#endif


#ifdef SUPPORT_KEY_6_VOICE
	MSG_VOICE_YESE,	
	MSG_VOICE_END,	
	MSG_VOICE_APPLAUD,
	MSG_VOICE_GUN,	
	MSG_VOICE_ZXC,	
	MSG_VOICE_BEST_PARTNER,
#endif

#ifdef  support_power_off_tone
	MSG_VOICE_POWER_OFF,	
#endif
    MSG_INPUT_TIMEOUT,
    MSG_HALF_SECOND,


	//解码器消息
	SYS_EVENT_BEGIN_DEC = 0xB0,
    SYS_EVENT_DEC_FR_END,
    SYS_EVENT_DEC_FF_END,
    SYS_EVENT_DEC_END,
    SYS_EVENT_DEC_DEVICE_ERR,

    SYS_EVENT_PLAY_SEL_END,
	MSG_NULL = 0xff,
};
#endif
enum{
//	SYS_MSG_0 = 0x40,

	SYS_EVENT_DEV_ONLINE = 0xc0,
	SYS_EVENT_DEV_OFFLINE,
    SYS_EVENT_LGDEV_ONLINE,
    SYS_EVENT_LGDEV_OFFLINE,
    SYS_EVENT_SYSCLK_NOTFIT_DEVMOUNT,   ///<当前系统时钟不满足设备枚举需求，收到此消息，切换进music
	SYS_EVENT_AUX_IN,           ///<AUX插入
	SYS_EVENT_AUX_OUT,          ///<AUX拔出
	SYS_EVENT_PC_IN,            ///<PC 插入
	SYS_EVENT_PC_OUT,           ///<PC 拔出
	SYS_EVENT_DECODE_END,
	SYS_EVENT_STORE_BP,
	SYS_EVENT_RESTORE_BP,
	SYS_EVENT_DEL_TASK,
	SYS_EVENT_TONE_END,
	SYS_EVENT_RES_MANAGE_RUN,
	SYS_EVENT_TASK_EXIT_REQ,
	SYS_EVENT_TASK_RUN_REQ,
    SYS_EVENT_BT_BACKCON,       ///<蓝牙在后台才连接成功，由用户选择处理
	SYS_EVENT_BT_BACKDISCON,    ///<蓝牙在后台断开成功，由用户选择处理
	SYS_EVNET_DEV_BEGIN_MOUNT,
	SYS_EVENT_DEV_MOUNT_ERR,
};

struct event_head {
	const char *str;
	int len;
	char data[0];
};

#endif

#ifdef SUPPORT_USE_ENCODE_AS_MODE_CHANGE
enum {
              MAIN_WORK_MODE=0,
		MUSIC_WORK_MODE,
 		LINE_WORK_MODE,
		AC3_WORK_MODE,
		DVD_WORK_MODE,
		CD_WORK_MODE,
		RADIO_WORK_MODE,
		BT_WORK_MODE,
   		STANBY_WORK_MODE,
		PC_WORK_MODE,
    		NOP_WORK_MODE,
    		POWER_OFF_WORK_MODE,			  
         };

#else
enum {
              MAIN_WORK_MODE=0,
		MUSIC_WORK_MODE,
		LINE_WORK_MODE,
		AC3_WORK_MODE,
		RADIO_WORK_MODE,
		BT_WORK_MODE,
		PC_WORK_MODE,
    		STANBY_WORK_MODE,
    		NOP_WORK_MODE,
    		POWER_OFF_WORK_MODE,

			  
         };
#endif


